'/bootstrap':signature(asHexString(Num)::'/Functional':expr('/bootstrap':string), [Num::'/Functional':expr('/bootstrap':number)]).
'/Functional':def(asHexString(Num), '/bootstrap':string, '/Functional':if('/Functional':gt(Num, '/Functional':wrap(0), '/bootstrap':number), '/Functional':concat(asHexString('/Functional':idiv(Num, '/Functional':wrap(16))), hexDigit('/Functional':modulus(Num, '/Functional':wrap(16)))), '/Functional':wrap(!''))).
'/bootstrap':signature(hexDigit(Num)::'/Functional':expr('/bootstrap':string), [Num::'/Functional':expr('/bootstrap':number)]).
'/Functional':def(hexDigit(Num), '/bootstrap':string, '/Functional':switch(Num, '/bootstrap':number, '/Functional':case(10, '/Functional':wrap(!'A'), '/Functional':case(11, '/Functional':wrap(!'B'), '/Functional':case(12, '/Functional':wrap(!'C'), '/Functional':case(13, '/Functional':wrap(!'D'), '/Functional':case(14, '/Functional':wrap(!'E'), '/Functional':case(15, '/Functional':wrap(!'F'), '/Functional':otherwise('/Functional':'num2str'(Num)))))))))).
'/bootstrap':unitTest('/Functional':eval(asHexString('/Functional':wrap(192)), '/bootstrap':string, !'C0')).
