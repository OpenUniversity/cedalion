annotation:comment('/bootstrap':defAtom(handle::'/bootstrap':type),!'A handle is a Javascript object that implements a get() function that returns some value, and a set(v) function that sets that value to v').
'/bootstrap':signature(editable(Term,VNs,Handle)::Type,[Term::Type,VNs::'/bootstrap':list('/bootstrap':varName),Handle::handle]).
'/bootstrap':isDescriptor(editable(Term,VNs,Handle)::Type):-builtin:true.
'/bootstrap':descriptorContent(editable(Term,VNs,Handle)::Type,Term::Type,VNs):-builtin:true.
annotation:shrink('/bootstrap':signature(propagateEditableDescriptors(TArgs,VNs,TArgsPrime,Handle,Index)::'/bootstrap':pred,[TArgs::'/bootstrap':list('/bootstrap':typedTerm),VNs::'/bootstrap':list('/bootstrap':varName),TArgsPrime::'/bootstrap':list('/bootstrap':typedTerm),Handle::handle,Index::'/bootstrap':number])).
propagateEditableDescriptors([],_,[],_,_):-builtin:true.
annotation:shrink((propagateEditableDescriptors([First::Type|TArgs],VNs,[editable(First,VNs,'/javascript/jsLogic':jsExpr('/javascript':json(annotation:changeMode(['/javascript':bind('/javascript':str(!notify),annotation:shrink('/javascript':function([],['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Handle::handle),!notify),[]))]))),'/javascript':bind('/javascript':str(!get),annotation:shrink('/javascript':function([],['/javascript':return('/javascript':arrayElement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Handle::handle),!get),[]),'/javascript/jsLogic':inlineTerm(IndexPrime::'/bootstrap':number)))]))),'/javascript':bind('/javascript':str(!set),'/javascript':function([V],['/javascript':assign('/javascript':arrayElement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Handle::handle),!get),[]),'/javascript/jsLogic':inlineTerm(IndexPrime::'/bootstrap':number)),'/javascript':varExpr(V)),'/javascript':exprStatement('/javascript':call('/javascript':dot(this,!notify),[]))]))],'/bootstrap':vert))))::Type|TArgsPrime],Handle,Index):-builtin:succ(Index,IndexPrime),propagateEditableDescriptors(TArgs,VNs,TArgsPrime,Handle,IndexPrime))).
annotation:shrink((propagateDescriptor(editable(Term,VNs,Handle)::Type,PropTerm::Type,VNs):-builtin:if(builtin:compound(Term::Type), (builtin:parseTerm(Term::Type,Name,TArgs),propagateEditableDescriptors(TArgs,VNs,TArgsPrime,Handle,0),builtin:parseTerm(PropTerm::Type,Name,TArgsPrime)),PropTerm::Type=Term::Type))).
'/javascript/statepred':unitTest('/cedalionWeb/xml':generates(toHTML('/bootstrap':vis(editable(builtin:succ(Y,X),[builtin:varName(X::'/bootstrap':number,!'X'),builtin:varName(Y::'/bootstrap':number,!'Y')],'/javascript/jsLogic':jsExpr('/javascript':json(['/javascript':bind('/javascript':str(!get),annotation:shrink('/javascript':function([],['/javascript':return('/javascript':array([]))]))),'/javascript':bind('/javascript':str(!set),annotation:shrink('/javascript':function([V],[])))])))::'/bootstrap':pred)),_)).
'/bootstrap':disabled('/javascript/jsLogic':procedure(bind(editable(Term,VNs,Handle)::Type,Elem),'/javascript/jsLogic':jsCommand([annotation:shrink('/javascript':var(ReplaceFunc,'/javascript/statepred':async('/javascript':function([NewTerm],['/javascript/jsLogic':runProcedure('/javascript/statepred':whenever('/cedalionWeb/xml':generates(toHTML('/bootstrap':vis(editable('/javascript/jsLogic':jsExpr('/javascript':varExpr(NewTerm)),VNs,Handle)::Type)),S),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::jQueryElem),!replaceWith),['/javascript/jsLogic':inlineTerm(S::'/bootstrap':string)]))])))])))),'/javascript':if('/javascript':dot('/javascript/jsLogic':inlineTerm(Handle::handle),!listeners),['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':dot('/javascript/jsLogic':inlineTerm(Handle::handle),!listeners),!push),['/javascript':varExpr(ReplaceFunc)]))],[])]))).
