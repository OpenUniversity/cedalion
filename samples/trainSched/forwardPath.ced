'/bootstrap':defAtom(hop::'/bootstrap':type).
'/bootstrap':signature(hop(From,DayTime1,Train,To,DayTime2)::hop,[From::'/bootstrap':string,DayTime1::dayTime,Train::'/bootstrap':string,To::'/bootstrap':string,DayTime2::dayTime]).
'/bootstrap':projection(hop(From,DayTime1,Train,To,DayTime2)::hop,'/bootstrap':horiz(['/bootstrap':vis(Train::'/bootstrap':string),'/bootstrap':label(!departing),'/bootstrap':vis(From::'/bootstrap':string),'/bootstrap':vis(DayTime1::dayTime),'/bootstrap':label(!arriving),'/bootstrap':vis(To::'/bootstrap':string),'/bootstrap':vis(DayTime2::dayTime)])).
annotation:shrink('/bootstrap':signature(forwardPath(From,DayTime1,To,Itenerary,Deadline,Visited)::'/javascript/statepred':statePred,[From::'/bootstrap':string,DayTime1::dayTime,To::'/bootstrap':string,Itenerary::'/bootstrap':list(hop),Deadline::'/bootstrap':number,Visited::'/bootstrap':list('/bootstrap':string)])).
annotation:shrink('/bootstrap':projection(forwardPath(From,DayTime1,To,Itenerary,Deadline,Visited)::'/javascript/statepred':statePred,'/bootstrap':horiz(['/bootstrap':vis(Itenerary::'/bootstrap':list(hop)),'/bootstrap':label(!'is a forward path from'),'/bootstrap':vis(From::'/bootstrap':string),'/bootstrap':label(!on),'/bootstrap':vis(DayTime1::dayTime),'/bootstrap':label(!to),'/bootstrap':vis(To::'/bootstrap':string),'/bootstrap':label(!'with deadline'),'/bootstrap':vis(Deadline::'/bootstrap':number),'/bootstrap':label(!'excluidng visited trains'),'/bootstrap':vis(Visited::'/bootstrap':list('/bootstrap':string))]))).
annotation:shrink('/javascript/statepred':clause(forwardPath(Source,DayTime1,Destination,IteneraryPrime,Deadline,Visited),'/javascript/statepred':if('/javascript/statepred':pred(Source::'/bootstrap':string=Destination::'/bootstrap':string),'/javascript/statepred':pred(IteneraryPrime::'/bootstrap':list(hop)=[]::'/bootstrap':list(hop)),'/javascript/statepred':conj('/javascript/statepred':tracePred(directPath(Source,DayTime1,Layover,DayTime2,Train,Deadline)),'/javascript/statepred':conj(annotation:comment('/javascript/statepred':tracePred('/javascript/statepred':pred(\+'/bootstrap':listMember(Train,'/bootstrap':string,Visited))),!'Make sure we have not visited this train already'),'/javascript/statepred':conj(forwardPath(Layover,DayTime2,Destination,Itenerary,Deadline,[Train|Visited]),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval(dayTimeInMinutes(DayTime1),'/bootstrap':number,StartTime)),'/javascript/statepred':conj(annotation:comment('/javascript/statepred':tracePred(directPath(Source,DayTime1Prime,Layover,DayTime2,_,StartTime)),!'Find the actual  departure time'),'/javascript/statepred':pred(IteneraryPrime::'/bootstrap':list(hop)=[hop(Source,DayTime1Prime,Train,Layover,DayTime2)|Itenerary]::'/bootstrap':list(hop)))))))))).
'/bootstrap':disabled('/javascript/statepred':unitTest('/javascript/statepred':tracePred(forwardPath(!chicago,dayTime(monday,time(7,0)),!denver,[_],1000,[])))).
'/bootstrap':signature(forwardPath(Source,DayTime,Destination,Itenerary)::'/javascript/statepred':statePred,[Source::'/bootstrap':string,DayTime::dayTime,Destination::'/bootstrap':string,Itenerary::'/bootstrap':list(hop)]).
annotation:shrink('/bootstrap':signature(forwardPathGradual(Source,DepartureTime,Destination,TimeQuota,Depth,Itenerary)::'/javascript/statepred':statePred,[Source::'/bootstrap':string,DepartureTime::dayTime,Destination::'/bootstrap':string,TimeQuota::'/Functional':expr('/bootstrap':number),Depth::'/Functional':expr('/bootstrap':number),Itenerary::'/bootstrap':list(hop)])).
annotation:shrink('/javascript/statepred':clause(forwardPathGradual(Source,DepartureTime,Destination,TimeQuota,Depth,Itinerary),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp(dayTimeInMinutes(DepartureTime),'/Functional':numPlus,TimeQuota),'/bootstrap':number,Deadline)),'/javascript/statepred':conj('/javascript/statepred':findall(ItineraryPrime,'/bootstrap':list(hop),'/javascript/statepred':tracePred(forwardPath(Source,DepartureTime,Destination,ItineraryPrime,Deadline,[])),Itineraries),'/javascript/statepred':if('/javascript/statepred':pred(('/Functional':gt(Depth,'/Functional':const(0),'/bootstrap':number),Itineraries::'/bootstrap':list('/bootstrap':list(hop))=[]::'/bootstrap':list('/bootstrap':list(hop)))),forwardPathGradual(Source,DepartureTime,Destination,'/Functional':applyBinOp(TimeQuota,'/Functional':times,'/Functional':const(2)),'/Functional':applyBinOp(Depth,'/Functional':minus,'/Functional':const(1)),Itinerary),'/javascript/statepred':pred('/bootstrap':listMember(Itinerary,'/bootstrap':list(hop),Itineraries))))))).
'/bootstrap':disabled(annotation:shrink('/javascript/statepred':clause(forwardPath(Source,DayTime,Destination,Itenerary),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp(dayTimeInMinutes(DayTime),'/Functional':numPlus,'/Functional':const(60)),'/bootstrap':number,Deadline1)),'/javascript/statepred':conj(forwardPath(Source,DayTime,Destination,Itenerary1,Deadline1,[]),'/javascript/statepred':if('/javascript/statepred':pred(Itenerary1::'/bootstrap':list(hop)=[]::'/bootstrap':list(hop)),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp(dayTimeInMinutes(DayTime),'/Functional':numPlus,'/Functional':const(120)),'/bootstrap':number,Deadline2)),'/javascript/statepred':conj(forwardPath(Source,DayTime,Destination,Itenerary2,Deadline2,[]),'/javascript/statepred':if('/javascript/statepred':pred(Itenerary2::'/bootstrap':list(hop)=[]::'/bootstrap':list(hop)),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp(dayTimeInMinutes(DayTime),'/Functional':numPlus,'/Functional':const(240)),'/bootstrap':number,Deadline3)),'/javascript/statepred':conj(forwardPath(Source,DayTime,Destination,Itenerary3,Deadline3,[]),'/javascript/statepred':if('/javascript/statepred':pred(Itenerary3::'/bootstrap':list(hop)=[]::'/bootstrap':list(hop)),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp(dayTimeInMinutes(DayTime),'/Functional':numPlus,'/Functional':const(480)),'/bootstrap':number,Deadline4)),forwardPath(Source,DayTime,Destination,Itenerary,Deadline4,[])),'/javascript/statepred':pred(Itenerary::'/bootstrap':list(hop)=Itenerary3::'/bootstrap':list(hop))))),'/javascript/statepred':pred(Itenerary::'/bootstrap':list(hop)=Itenerary2::'/bootstrap':list(hop))))),'/javascript/statepred':pred(Itenerary::'/bootstrap':list(hop)=Itenerary1::'/bootstrap':list(hop)))))))).
annotation:shrink('/javascript/statepred':clause(forwardPath(Source,DayTime,Destination,Itinerary),forwardPathGradual(Source,DayTime,Destination,'/Functional':const(60),'/Functional':const(5),Itinerary))).
'/javascript/statepred':unitTest('/javascript/statepred':tracePred(forwardPath(!chicago,dayTime(wednesday,time(13,0)),!denver,[_]))).
'/javascript/statepred':unitTest('/javascript/statepred':tracePred(forwardPath(!'los angeles',dayTime(thursday,time(10,0)),!chicago,_))).
'/javascript/jsLogic':procedure(testForwardPath,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/statepred':whenever(forwardPath(!'los angeles',dayTime(thursday,time(10,0)),!chicago,Itinerary),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript':op('/javascript':str(!'Itinerary: "'),'/javascript':plus,'/javascript/jsLogic':inlineTerm(Itinerary::'/bootstrap':list(hop)))]))])))])).
