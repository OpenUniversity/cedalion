'/bootstrap':signature(inverse(Seq, InvSeq)::'/bootstrap':pred, [Seq::'/bootstrap':list(base), InvSeq::'/bootstrap':list(base)]).
'/bootstrap':projection(inverse(Seq, InvSeq)::'/bootstrap':pred, '/bootstrap':horiz(['/bootstrap':vis(Seq::'/bootstrap':list(base)), '/bootstrap':label(!'is the inverse of'), '/bootstrap':vis(InvSeq::'/bootstrap':list(base))])).
inverse([], []):-builtin:true.
inverse(List, [First|Rest]):-inverse(InvRest, Rest), '/bootstrap':append(InvRest, [First], List).
'/bootstrap':signature(inv(SeqSet)::'/bootstrap':set('/bootstrap':list(base)), [SeqSet::'/bootstrap':set('/bootstrap':list(base))]).
'/bootstrap':projection(inv(SeqSet)::'/bootstrap':set('/bootstrap':list(base)), '/bootstrap':horiz(['/bootstrap':vis(SeqSet::'/bootstrap':set('/bootstrap':list(base))), '/bootstrap':halfSize('/bootstrap':label(!inv))])).
'/bootstrap':member(InvSeq, inv(SeqSet), '/bootstrap':list(base)):-'/bootstrap':member(Seq, SeqSet, '/bootstrap':list(base)), inverse(InvSeq, Seq).
'/bootstrap':unitTest('/bootstrap':member([a, t, g], inv(seq(gSet, seq(tSet, aSet))), '/bootstrap':list(base))).
'/bootstrap':unitTest(\+'/bootstrap':member([a, t, a], inv(seq(gSet, seq(tSet, aSet))), '/bootstrap':list(base))).
'/bootstrap':signature(complement(Set)::'/bootstrap':set('/bootstrap':list(base)), [Set::'/bootstrap':set('/bootstrap':list(base))]).
'/bootstrap':projection(complement(Set)::'/bootstrap':set('/bootstrap':list(base)), '/bootstrap':horiz(['/bootstrap':vis(Set::'/bootstrap':set('/bootstrap':list(base))), '/bootstrap':halfSize('/bootstrap':label(!comp))])).
dnaSetDef(complement(Set), conj(inv(Set))).
'/bootstrap':signature(palindromial(X)::'/bootstrap':set('/bootstrap':list(base)), [X::'/bootstrap':set('/bootstrap':list(base))]).
dnaSetDef(palindromial(X), seq(bind(X, Y), complement(Y))).
'/bootstrap':signature(testSet::'/bootstrap':set('/bootstrap':list(base)), []).
dnaSetDef(testSet, palindromial(seq(rep(nSet, 7), cSet))).
