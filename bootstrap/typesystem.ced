signature(marker::type, []).
signature(check(Path, TTerm, VarNames, Marker)::pred, [Path::cpi:path, TTerm::typedTerm, VarNames::list(varName), Marker::locMarker]).
signature(statementPath(StatementPath)::pred, [StatementPath::cpi:path]).
signature(true(Goal)::pred, [Goal::pred]).
projection(true(Goal)::pred, horiz([vis(Goal::pred), label(! (!))])).
signature(builtin:copyTerm(TTermOrig, TTermCopy)::pred, [TTermOrig::typedTerm, TTermCopy::typedTerm]).
check(StatementPath, Statement::statement, VarNames, Marker):-statementPath(StatementPath), builtin:copyTerm(Statement::statement, StatementCopy::statement), true(checkTypes(StatementPath, Statement::statement, VarNames, [], Markers)), checkTypeConsistency(Statement, StatementCopy, Markers, MarkersFinal, StatementPath, VarNames), listMember(Marker, locMarker, MarkersFinal).
signature(builtin:structurallyEqual(TTerm1, TTerm2)::pred, [TTerm1::typedTerm, TTerm2::typedTerm]).
signature(typesNotFullyInstantiated(Statement, StatementPath)::error, [Statement::statement, StatementPath::cpi:path]).
projection(typesNotFullyInstantiated(Statement, StatementPath)::error, vert([horiz([label(!'Types are not fully instantiated in statement at path:'), vis(StatementPath::cpi:path)]), horiz([label(!'    '), vis(Statement::statement)])])).
signature(checkTypeConsistency(Statement, StatementCopy, Markers, MarkersFinal, StatementPath, VarNames)::pred, [Statement::statement, StatementCopy::statement, Markers::list(locMarker), MarkersFinal::list(locMarker), StatementPath::cpi:path, VarNames::list(varName)]).
checkTypeConsistency(Statement, StatementCopy, Markers, MarkersFinal, StatementPath, VarNames):-builtin:if(builtin:structurallyEqual(Statement::statement, StatementCopy::statement), MarkersFinal::list(locMarker)=Markers::list(locMarker), MarkersFinal::list(locMarker)=[marker(StatementPath, error(typesNotFullyInstantiated(Statement, StatementPath), VarNames))|Markers]::list(locMarker)).
statementPath(cpi:path(_, [1])):-builtin:true.
statementPath(cpi:path(Res, [2|Path])):-statementPath(cpi:path(Res, Path)).
listMember(X, _T, [X|_]):-builtin:true.
listMember(X, T, [_|L]):-listMember(X, T, L).
signature(builtin:var(TTerm)::pred, [TTerm::typedTerm]).
signature(builtin:string(TTerm)::pred, [TTerm::typedTerm]).
signature(builtin:number(TTerm)::pred, [TTerm::typedTerm]).
signature(checkTypes(Path, TTerm, VarNames, MarkIn, MarkOut)::pred, [Path::cpi:path, TTerm::typedTerm, VarNames::list(varName), MarkIn::list(locMarker), MarkOut::list(locMarker)]).
checkTypes(Path, Term::Type, VarNames, MarkIn, MarkOut):-builtin:if(builtin:var(Term::Type), checkVarType(Path, Term::Type, MarkIn, MarkOut), builtin:if(builtin:string(Term::Type), true(validateType(Path, Type, string, Path, MarkIn, MarkOut)), builtin:if(builtin:number(Term::Type), true(validateType(Path, Type, number, Path, MarkIn, MarkOut)), true(checkCompoundType(Path, Term::Type, VarNames, MarkIn, MarkOut))))).
signature(validateType(Path, InType, ExType, OrigPath, MarkIn, MarkOut)::pred, [Path::cpi:path, InType::type, ExType::type, OrigPath::cpi:path, MarkIn::list(locMarker), MarkOut::list(locMarker)]).
signature(builtin:safeUnify(TTerm1, TTerm2)::pred, [TTerm1::typedTerm, TTerm2::typedTerm]).
signature(locMarker::type, []).
signature(marker(Path, Marker)::locMarker, [Path::cpi:path, Marker::marker]).
signature(error::type, []).
signature(error(Error, VarNames)::marker, [Error::error, VarNames::list(varName)]).
signature(typeMimatch(InType, ExType, OrigPath)::error, [InType::type, ExType::type, OrigPath::cpi:path]).
projection(typeMimatch(InType, ExType, OrigPath)::error, horiz([label(!'Type mismatch.  Expected:'), vis(ExType::type), label(!'inferred:'), vis(InType::type), halfSize(vis(OrigPath::cpi:path))])).
validateType(Path, InType, ExType, OrigPath, MarkIn, MarkOut):-builtin:if(builtin:safeUnify(InType::type, ExType::type), MarkOut::list(locMarker)=MarkIn::list(locMarker), MarkOut::list(locMarker)=[marker(Path, error(typeMimatch(InType, ExType, OrigPath), []))|MarkIn]::list(locMarker)).
signature(checkVarType(Path, TVar, MarkIn, MarkOut)::pred, [Path::cpi:path, TVar::typedTerm, MarkIn::list(locMarker), MarkOut::list(locMarker)]).
signature(varType(TVar)::marker, [TVar::typedTerm]).
signature(typeOf(TVar, VarNames)::marker, [TVar::typedTerm, VarNames::list(varName)]).
checkVarType(Path, Var::ExType, MarkIn, [marker(Path, typeOf(Var::ExType, VarNames))|MarkOut]):-builtin:if(findVarType(MarkIn, Var::ExType, Type, OrigPath), validateType(Path, Type, ExType, OrigPath, MarkIn, MarkOut), MarkOut::list(locMarker)=[marker(Path, varType(Var::ExType))|MarkIn]::list(locMarker)).
signature(findVarType(MarkIn, TVar, Type, OrigPath)::pred, [MarkIn::list(locMarker), TVar::typedTerm, Type::type, OrigPath::cpi:path]).
findVarType([marker(Path, varType(Var::Type))|_], TVar, Type, Path):-builtin:equals(Var::Type, TVar).
findVarType([_|Markers], TVar, Type, Path):-findVarType(Markers, TVar, Type, Path).
signature(missingSignature(TTerm, TArgs, Path)::error, [TTerm::typedTerm, TArgs::list(typedTerm), Path::cpi:path]).
projection(missingSignature(TTerm, TArgs, Path)::error, horiz([label(!'Missing signature:'), vis(TTerm::typedTerm), symbol(8618), cpi:vis(TArgs::list(typedTerm), horiz)])).
signature(checkCompoundType(Path, TTerm, VarNames, MarkIn, MarkOut)::pred, [Path::cpi:path, TTerm::typedTerm, VarNames::list(varName), MarkIn::list(locMarker), MarkOut::list(locMarker)]).
checkCompoundType(Path, Term::ExType, VarNames, MarkIn, MarkOut):-builtin:if(checkSignature(Term::GivenType, TArgs), true(validateType(Path, ExType, GivenType, Path, MarkIn, MarkMid)), (true(builtin:parseTerm(Term::ExType, _, TArgs)), true(MarkMid::list(locMarker)=[marker(Path, error(missingSignature(Term::ExType, TArgs, Path), VarNames))|MarkIn]::list(locMarker)))), true(checkArgTypes(Path, 1, TArgs, VarNames, MarkMid, MarkOut)).
signature(checkSignature(TTerm, TArgs)::pred, [TTerm::typedTerm, TArgs::list(typedTerm)]).
signature(TTerm, TArgs)~>checkSignature(TTerm, TArgs):-builtin:parseTerm(TTerm, _, TRawArgs), \+checkSignature(TRawArgs, TArgs, signaturePlaceMismatch(_, _)), \+checkSignature(TRawArgs, TArgs, signatureSizeMismatch).
signature(checkArgTypes(Path, Index, TArgs, VarNames, MarkIn, MarkOut)::pred, [Path::cpi:path, Index::number, TArgs::list(typedTerm), VarNames::list(varName), MarkIn::list(locMarker), MarkOut::list(locMarker)]).
checkArgTypes(_, _, [], _, Markers, Markers):-builtin:true.
checkArgTypes(cpi:path(Res, Path), Index, [TArg|TArgs], VarNames, MarkIn, MarkOut):-append(Path, [Index], SubPath, number), true(checkTypes(cpi:path(Res, SubPath), TArg, VarNames, MarkIn, MarkMid)), builtin:succ(Index, NextIndex), checkArgTypes(cpi:path(Res, Path), NextIndex, TArgs, VarNames, MarkMid, MarkOut).
markerVis(typeOf(Term::Type, VarNames), V, tooltip(V, vis(cpi:immediateDescriptor(Type, VarNames)::type))).
markerVis(varType(_), V, bold(V)).
signature(exception::type, []).
signature(builtin:throw(Exception)::pred, [Exception::exception]).
signature(false(X)::exception, [X::pred]).
true(X):-builtin:if(X, builtin:true, builtin:throw(false(X))).
containingStatementPath(cpi:path(Res, []), cpi:path(Res, [])):-builtin:true.
containingStatementPath(cpi:path(Res, [2|Path]), cpi:path(Res, [2|StatementPath])):-containingStatementPath(cpi:path(Res, Path), cpi:path(Res, StatementPath)).
containingStatementPath(cpi:path(Res, [1|Path]), cpi:path(Res, [1])):-builtin:true.
