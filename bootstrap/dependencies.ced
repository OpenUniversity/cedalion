sigProj(error(Path, TTerm, VNs, Error)::pred, [Path::cpi:path, TTerm::typedTerm, VNs::list(varName), Error::error], horiz([label(!'Error'), vis(Error::error), label(!'for term'), vis(TTerm::typedTerm), label(!'at path'), vis(Path::cpi:path), label(!'with varnames'), vis(VNs::list(varName))])).
check(Path, TTerm, VNs, marker(Path, error(Error, VNs))):-builtin:catch(error(Path, TTerm, VNs, Error), Exception, Error::error=exceptionThrown(Exception)::error).
error(_, _, _, _):-builtin:fail.
signature(missingDefinition(Def, Path, VNs)::error, [Def::statement, Path::cpi:path, VNs::list(varName)]).
projection(missingDefinition(Def, Path, VNs)::error, vert([horiz([label(!'Missing definition:'), vis(Def::statement)]), halfSize(horiz([label(!'At path'), vis(Path::cpi:path), label(!'with varnames'), vis(VNs::list(varName))]))])).
signature(requiredSemanticDefinition::definitionType, []).
projection(requiredSemanticDefinition::definitionType, label(!'Required Semantic Definition')).
disabled((error(Path, TTerm, VNs, missingDefinition(Definition, Path, VNs)):- \+builtin:var(TTerm), canDefine(Definition, TTerm, requiredSemanticDefinition), checkSignature(TTerm, _), \+builtin:loadedStatement(_, Definition, _))).
